name: Maven Package

on:
  push:
    branches:
      - "main"  
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main  # Trigger on pull requests targeting the main branch

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write  # Ensure write access for posting comments

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      id: maven-build
      run: mvn -B package --file pom.xml

    # Generate checklist results
    - name: Generate checklist results
      id: generate_checklist
      run: |
        $checklist = @"
        ## Automated PR Checklist Results:
        - [ ] Build with Maven
        "@

        # If the Maven build was successful, mark the build step as completed
        if ("${{ steps.maven-build.outcome }}" -eq "success") {
          $checklist = $checklist -replace "Build with Maven", "[x] Build with Maven"
        }

        Write-Host "Updated checklist: $checklist"
        echo "checklist=$checklist" >> $GITHUB_ENV

    # Debug checklist value and GitHub API URL
    - name: Debug checklist value and GitHub API URL
      run: |
        $checklist = "${{ env.checklist }}"
        Write-Host "Raw output of checklist: $checklist"
        Write-Host "Length of checklist: $($checklist.Length)"
        echo "Repository: ${{ github.repository }}"
        echo "PR Number: ${{ github.event.pull_request.number }}"
        echo "GitHub API URL: https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

    # Post checklist results as a comment on the PR
    - name: Post checklist results
      if: github.event_name == 'pull_request'
      run: |
        $checklist = "${{ env.checklist }}"
        $body = @{ body = $checklist } | ConvertTo-Json
        $url = "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
        $headers = @{
          "Authorization" = "token ${{ secrets.PAT }}"
          "Content-Type"  = "application/json"
        }
        Invoke-WebRequest -Uri $url -Method POST -Headers $headers -Body $body
